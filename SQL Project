1.Who is the senior most employee based on job title?
SELECT TOP 1 first_name,last_name,title,levels FROM cEmployee
ORDER BY levels DESC

2.Which countries have the most Invoices?
Select billing_country,count(total) as total from Invoice
Group by billing_country
Order by total desc

3.What are top 3 values of total invoice?
SELECT TOP 3 billing_city,SUM(TOTAL)AS TOTAL FROM Invoice
GROUP BY billing_city
ORDER BY TOTAL DESC

4.Which city has the best customers? We would like to throw a promotional Music
Festival in the city we made the most money. Write a query that returns one city that
has the highest sum of invoice totals. Return both the city name & sum of all invoice
totals
SELECT TOP 1 billing_city,SUM(TOTAL)AS TOTAL FROM Invoice
GROUP BY billing_city
ORDER BY SUM(TOTAL) DESC

5.Who is the best customer? The customer who has spent the most money will be
declared the best customer. Write a query that returns the person who has spent the
most money
SELECT TOP 1 cCustomer.customer_id,first_name,last_name,SUM(INVOICE.TOTAL) AS TOTAL FROM cCustomer
INNER JOIN Invoice ON cCustomer.customer_id=Invoice.customer_id
GROUP BY cCustomer.customer_id,first_name,last_name
ORDER BY SUM(TOTAL) DESC

6.Write query to return the email, first name, last name, & Genre of all Rock Music
listeners. Return your list ordered alphabetically by email starting with A


7.SELECT DISTINCT email,first_name,last_name FROM cCustomer
INNER JOIN Invoice ON cCustomer.customer_id = Invoice.customer_id
INNER JOIN Invoice_Line ON Invoice.invoice_id = Invoice_Line.invoice_id
INNER JOIN Track ON Invoice_Line.track_id =Track.track_id
INNER JOIN Genre ON Track.genre_id = Genre.genre_id
WHERE Genre.name LIKE 'ROCK'
ORDER BY email	

8.Return all the track names that have a song length longer than the average song length.
Return the Name and Milliseconds for each track. Order by the song length with the
longest songs listed first
SELECT name,milliseconds FROM Track
WHERE milliseconds >(SELECT AVG(milliseconds) FROM Track)
ORDER BY milliseconds DESC


